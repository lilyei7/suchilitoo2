#!/usr/bin/env python
"""
Script para verificar el flujo completo del sistema de inventario
"""
import os
import sys

# Agregar el directorio del proyecto al path de Python
sys.path.append(os.path.dirname(os.path.abspath(__file__)))

# Configurar Django
os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'sushi_core.settings')

import django
django.setup()

from restaurant.models import Insumo, Proveedor, Inventario
from accounts.models import Sucursal

def verificar_flujo_completo():
    print("üîç VERIFICACI√ìN DEL FLUJO COMPLETO DEL SISTEMA")
    print("=" * 70)
    
    # 1. Verificar insumos existentes
    print("1Ô∏è‚É£ VERIFICANDO INSUMOS:")
    insumos = Insumo.objects.filter(activo=True)
    print(f"   üì¶ Total de insumos activos: {insumos.count()}")
    
    for insumo in insumos:
        print(f"\n   üìã {insumo.codigo} - {insumo.nombre}")
        print(f"      Categor√≠a: {insumo.categoria.nombre if insumo.categoria else 'Sin categor√≠a'}")
        print(f"      Proveedor: {insumo.proveedor_principal.nombre if insumo.proveedor_principal else '‚ùå Sin proveedor'}")
        
        # Verificar inventarios
        inventarios = Inventario.objects.filter(insumo=insumo)
        print(f"      Inventarios: {inventarios.count()} sucursal(es)")
        
        for inv in inventarios:
            print(f"         üè¢ {inv.sucursal.nombre}: {inv.cantidad_actual} {insumo.unidad_medida.abreviacion if insumo.unidad_medida else ''}")
    
    # 2. Verificar proveedores
    print(f"\n2Ô∏è‚É£ VERIFICANDO PROVEEDORES:")
    proveedores = Proveedor.objects.filter(activo=True)
    print(f"   üè≠ Total de proveedores activos: {proveedores.count()}")
    
    for proveedor in proveedores:
        insumos_proveidos = Insumo.objects.filter(proveedor_principal=proveedor, activo=True)
        print(f"\n   üè≠ {proveedor.nombre}")
        print(f"      Contacto: {proveedor.contacto or 'Sin contacto'}")
        print(f"      Tel√©fono: {proveedor.telefono or 'Sin tel√©fono'}")
        print(f"      Email: {proveedor.email or 'Sin email'}")
        print(f"      Insumos prove√≠dos: {insumos_proveidos.count()}")
        
        for insumo in insumos_proveidos:
            print(f"         üì¶ {insumo.codigo} - {insumo.nombre}")
    
    # 3. Verificar sucursales
    print(f"\n3Ô∏è‚É£ VERIFICANDO SUCURSALES:")
    sucursales = Sucursal.objects.filter(activa=True)
    print(f"   üè¢ Total de sucursales activas: {sucursales.count()}")
    
    for sucursal in sucursales:
        inventarios_sucursal = Inventario.objects.filter(sucursal=sucursal)
        print(f"\n   üè¢ {sucursal.nombre}")
        print(f"      Inventarios: {inventarios_sucursal.count()} insumo(s)")
        
        for inv in inventarios_sucursal:
            print(f"         üì¶ {inv.insumo.codigo}: {inv.cantidad_actual} {inv.insumo.unidad_medida.abreviacion if inv.insumo.unidad_medida else ''}")

def mostrar_resumen_api():
    """Mostrar informaci√≥n que se env√≠a a trav√©s del API de detalles"""
    print("\n4Ô∏è‚É£ VERIFICANDO API DE DETALLES:")
    
    insumos = Insumo.objects.filter(activo=True)
    
    for insumo in insumos:
        print(f"\n   üì° API para {insumo.codigo} - {insumo.nombre}:")
        print(f"      ID: {insumo.id}")
        print(f"      Proveedor: {insumo.proveedor_principal.nombre if insumo.proveedor_principal else 'Sin proveedor'}")
        
        if insumo.proveedor_principal:
            print(f"      Contacto proveedor: {insumo.proveedor_principal.contacto or 'Sin contacto'}")
            print(f"      Tel√©fono proveedor: {insumo.proveedor_principal.telefono or 'Sin tel√©fono'}")
            print(f"      Email proveedor: {insumo.proveedor_principal.email or 'Sin email'}")
        
        # Simular c√°lculo de stock total
        inventarios = Inventario.objects.filter(insumo=insumo)
        stock_total = sum(inv.cantidad_actual for inv in inventarios if inv.cantidad_actual)
        print(f"      Stock total: {stock_total} {insumo.unidad_medida.abreviacion if insumo.unidad_medida else ''}")
        
        # Estado del stock
        from decimal import Decimal
        if stock_total <= insumo.stock_minimo:
            estado = 'üî¥ BAJO'
        elif stock_total <= (insumo.stock_minimo * Decimal('1.5')):
            estado = 'üü° MEDIO'
        else:
            estado = 'üü¢ ALTO'
        print(f"      Estado: {estado}")

def mostrar_recomendaciones():
    """Mostrar recomendaciones para completar el flujo"""
    print("\n5Ô∏è‚É£ RECOMENDACIONES PARA COMPLETAR EL FLUJO:")
    
    # Insumos sin proveedor
    insumos_sin_proveedor = Insumo.objects.filter(activo=True, proveedor_principal__isnull=True)
    if insumos_sin_proveedor.count() > 0:
        print(f"\n   ‚ö†Ô∏è {insumos_sin_proveedor.count()} insumo(s) sin proveedor asignado:")
        for insumo in insumos_sin_proveedor:
            print(f"      üì¶ {insumo.codigo} - {insumo.nombre}")
        print("      üí° Ir a /dashboard/proveedores/ para asignar proveedores")
    
    # Inventarios con stock 0
    inventarios_sin_stock = Inventario.objects.filter(cantidad_actual=0)
    if inventarios_sin_stock.count() > 0:
        print(f"\n   üìä {inventarios_sin_stock.count()} inventario(s) con stock 0:")
        for inv in inventarios_sin_stock:
            print(f"      üì¶ {inv.insumo.codigo} en {inv.sucursal.nombre}")
        print("      üí° Ir a /dashboard/entradas-salidas/ para dar stock inicial")
    
    # Si todo est√° bien
    if insumos_sin_proveedor.count() == 0 and inventarios_sin_stock.count() == 0:
        print("\n   ‚úÖ ¬°Todo el flujo est√° completo!")
        print("      - Todos los insumos tienen proveedores asignados")
        print("      - Todos los inventarios tienen stock")
        print("      - El modal de detalles mostrar√° informaci√≥n completa del proveedor")

if __name__ == "__main__":
    print("üöÄ INICIANDO VERIFICACI√ìN DEL FLUJO COMPLETO\n")
    
    verificar_flujo_completo()
    mostrar_resumen_api()
    mostrar_recomendaciones()
    
    print("\n" + "=" * 70)
    print("‚úÖ VERIFICACI√ìN COMPLETADA")
    print("\nüìã FLUJO DEL SISTEMA:")
    print("1. Crear insumo ‚Üí /dashboard/inventario/ (bot√≥n 'Nuevo Insumo')")
    print("2. Asignar proveedor ‚Üí /dashboard/proveedores/ (gestionar proveedores)")
    print("3. Dar stock ‚Üí /dashboard/entradas-salidas/ (crear movimiento de entrada)")
    print("4. Ver detalles ‚Üí /dashboard/inventario/ (bot√≥n 'Ver detalles' en la tabla)")
