#!/usr/bin/env python3
"""
Test para verificar que los errores de JavaScript en recetas.html est√©n corregidos
"""

import time
from selenium import webdriver
from selenium.webdriver.chrome.options import Options
from selenium.webdriver.common.by import By
from selenium.webdriver.support.ui import WebDriverWait
from selenium.webdriver.support import expected_conditions as EC

def test_recetas_javascript():
    """Probar la p√°gina de recetas y verificar que no haya errores de JavaScript"""
    
    print("üöÄ Iniciando test de JavaScript en recetas...")
    
    # Configurar Chrome en modo headless
    chrome_options = Options()
    chrome_options.add_argument("--headless")
    chrome_options.add_argument("--no-sandbox")
    chrome_options.add_argument("--disable-dev-shm-usage")
    chrome_options.add_argument("--disable-gpu")
    chrome_options.add_argument("--window-size=1920,1080")
    
    try:
        driver = webdriver.Chrome(options=chrome_options)
        print("‚úÖ Navegador Chrome iniciado")
        
        # Navegar a la p√°gina de recetas
        url = "http://127.0.0.1:8000/dashboard/recetas/"
        print(f"üìç Navegando a: {url}")
        driver.get(url)
        
        # Esperar a que la p√°gina se cargue
        WebDriverWait(driver, 10).until(
            EC.presence_of_element_located((By.TAG_NAME, "body"))
        )
        print("‚úÖ P√°gina cargada")
        
        # Verificar que no hay errores de JavaScript en la consola
        logs = driver.get_log('browser')
        js_errors = [log for log in logs if log['level'] == 'SEVERE']
        
        if js_errors:
            print("‚ùå Errores de JavaScript encontrados:")
            for error in js_errors:
                print(f"  - {error['message']}")
            return False
        else:
            print("‚úÖ No se encontraron errores de JavaScript")
        
        # Verificar que las funciones globales est√°n definidas
        abrirModalCrearReceta_defined = driver.execute_script(
            "return typeof window.abrirModalCrearReceta === 'function';"
        )
        abrirModalCategorias_defined = driver.execute_script(
            "return typeof window.abrirModalCategorias === 'function';"
        )
        
        print(f"üîç window.abrirModalCrearReceta definida: {abrirModalCrearReceta_defined}")
        print(f"üîç window.abrirModalCategorias definida: {abrirModalCategorias_defined}")
        
        if not abrirModalCrearReceta_defined:
            print("‚ùå La funci√≥n abrirModalCrearReceta no est√° definida")
            return False
            
        if not abrirModalCategorias_defined:
            print("‚ùå La funci√≥n abrirModalCategorias no est√° definida")
            return False
        
        # Intentar hacer clic en el bot√≥n de crear receta
        try:
            crear_btn = driver.find_element(By.XPATH, "//button[contains(@onclick, 'abrirModalCrearReceta')]")
            print("‚úÖ Bot√≥n 'Crear Receta' encontrado")
            
            # Ejecutar la funci√≥n JavaScript
            driver.execute_script("window.abrirModalCrearReceta();")
            print("‚úÖ Funci√≥n abrirModalCrearReceta ejecutada sin errores")
            
        except Exception as e:
            print(f"‚ö†Ô∏è No se pudo encontrar/hacer clic en el bot√≥n: {e}")
        
        # Intentar hacer clic en el bot√≥n de categor√≠as
        try:
            categorias_btn = driver.find_element(By.XPATH, "//button[contains(@onclick, 'abrirModalCategorias')]")
            print("‚úÖ Bot√≥n 'Gestionar Categor√≠as' encontrado")
            
            # Ejecutar la funci√≥n JavaScript
            driver.execute_script("window.abrirModalCategorias();")
            print("‚úÖ Funci√≥n abrirModalCategorias ejecutada sin errores")
            
        except Exception as e:
            print(f"‚ö†Ô∏è No se pudo encontrar/hacer clic en el bot√≥n: {e}")
        
        print("üéâ Test completado exitosamente")
        return True
        
    except Exception as e:
        print(f"‚ùå Error durante el test: {e}")
        return False
        
    finally:
        if 'driver' in locals():
            driver.quit()
            print("üîí Navegador cerrado")

if __name__ == "__main__":
    success = test_recetas_javascript()
    if success:
        print("\n‚úÖ TODOS LOS TESTS PASARON - Los errores de JavaScript han sido corregidos")
    else:
        print("\n‚ùå ALGUNOS TESTS FALLARON - Revisar los errores reportados")
